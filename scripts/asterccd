#!/bin/sh
# chkconfig: 2345 99 10
# description: Activates/Deactivates astercc and asterrc.
#

# astercc and asterrc control script designed to allow an easy command line interface
# to controlling astercc and asterrc.  Written by donnie, 2008/03/20
# 
# The exit codes returned are:
#	0 - operation completed successfully
#	1 - 
#	2 - usage error
#	3 - astercc could not be started
#	4 - astercc could not be stopped
#	5 - astercc could not be started during a restart
#	6 - astercc could not be restarted during a restart
#	7 - asterrc could not be started
#	8 - asterrc could not be stopped
#	9 - asterrc could not be started during a restart
#	10 - asterrc could not be restarted during a restart
#	11 - asterccdaemon could not be started
#	12 - asterrccdaemon could not be stopped
#
# When multiple arguments are given, only the error from the _last_
# one is reported. 
#
#
# |||||||||||||||||||| CONFIGURATION SECTION  ||||||||||||||||||||
# --------------------                              --------------------
# 
#
# the absolute path to your astercc binary,must included shell name, can not include options
asterccpath="/opt/asterisk/scripts/astercc/astercc"
#
# the absolute path to your asterrc binary,must included shell name, can not include options
asterrcpath="/opt/asterisk/scripts/astercc/asterrc"
#
# the absolute path to your asterrc monitor---asterccdaemon, must included shell name, can not be included options
asterccdaemonpath="/opt/asterisk/scripts/astercc/asterccdaemon"
#
asterlcpath="/opt/asterisk/scripts/astercc/astercclock"
# --------------------                              --------------------
# ||||||||||||||||||||   END CONFIGURATION SECTION  ||||||||||||||||||||
# Source function library.
#. /etc/rc.d/init.d/functions

ERROR=0
ARGV="$@"
asterccpid=`ps -ef |grep -v grep |grep -E /asterc[.\ ]+-d |awk '{print $2}'`
asterrcpid=`ps -ef |grep -v grep |grep -E /asterr[.\ ]+-d |awk '{print $2}'`
asterlcpid=`ps -ef |grep -v grep |grep -E /asterccloc[.\ ]+-d |awk '{print $2}'`

if [ "x$ARGV" = "x" ] ; then 
    ARGS="start"
fi

for ARG in $@ $ARGS
do
    # check for pid
	#for astercc
	if [ "x$asterccpid" != "x" ]; then
	    asterccSTATUS="astrercc (pid $asterccpid) running"
	    asterccRUNNING=1
	else
	    asterccSTATUS="astercc not running"
	    asterccRUNNING=0
	fi

	#for asterrc
	if [ "x$asterrcpid" != "x" ]; then
	    asterrcSTATUS="astrerrc (pid $asterrcpid) running"
	    asterrcRUNNING=1
	else
	    asterrcSTATUS="asterrc not running"
	    asterrcRUNNING=0
	fi

	#for astercclock
	if [ "x$asterlcpid" != "x" ]; then
	    asterlcSTATUS="astrerrc (pid $astercclock) running"
	    asterlcRUNNING=1
	else
	    asterlcSTATUS="astercclock not running"
	    asterlcRUNNING=0
	fi

    case $ARG in
    start)
	#for astercc
	if [ $asterccRUNNING -eq 1 ]; then
	    echo "$0 $ARG: astercc (pid $asterccpid) already running"
	else
	    if test -s $asterccpath
	    then
		    $asterccpath -d
		    asterccpid=`ps -ef |grep -v grep |grep -E /asterc[.\ ]+-d |awk '{print $2}'`
		    if [ "x$asterccpid" != "x" ] ; then
		       echo "$0 $ARG: astercc started"
		    else
			echo "$0 $ARG: astercc could not be started"
			ERROR=3
		    fi
	    else
		echo No astercc in $asterccpath
		ERROR=1
	    fi
	fi

	#for asterrc
	if [ $asterrcRUNNING -eq 1 ]; then
	    echo "$0 $ARG: asterrc (pid $asterrcpid) already running"
	else
	    if test -s $asterrcpath
	    then
		    $asterrcpath -d
		    asterrcpid=`ps -ef |grep -v grep |grep -E /asterr[.\ ]+-d |awk '{print $2}'`
		    if [ "x$asterrcpid" != "x" ] ; then
			echo "$0 $ARG: asterrc started"
		    else
			echo "$0 $ARG: asterrc could not be started"
			ERROR=7
		    fi
	    else
		echo No asterrc in $asterrcpath
		ERROR=1
	    fi
	fi

	#for astercclock
	if [ $asterlcRUNNING -eq 1 ]; then
	    echo "$0 $ARG: astercclock (pid $asterlcpid) already running"
	else
	    if test -s $asterlcpath
	    then
		    $asterlcpath -d
		    asterlcpid=`ps -ef |grep -v grep |grep -E /asterccloc[.\ ]+-d |awk '{print $2}'`
		    if [ "x$asterrcpid" != "x" ] ; then
			echo "$0 $ARG: astercclock started"
		    else
			echo "$0 $ARG: astercclock could not be started"
			ERROR=7
		    fi
	    else
		echo No astercclock in $asterrcpath
		ERROR=1
	    fi
	fi

	#for start monitor
	if   test   -s   $asterccdaemonpath
	then
		monitorpid=`ps -ef |grep -v grep |grep asterccdaemon |awk '{print $2}'`
		if [ "x$monitorpid" != "x" ]; then
			echo "$0 $ARG: asterccdaemon (pid $monitorpid) already running"
		else
			/bin/sh $asterccdaemonpath &
			monitorpid=`ps -ef |grep -v grep |grep asterccdaemon |awk '{print $2}'`
			if [ "x$monitorpid" != "x" ]; then
				echo "$0 $ARG: asterccdaemon started"
			else
				echo "$0 $ARG: asterccdaemon could not be started"
				ERROR=11
			fi
		fi
	else
		echo No monitor script in $asterccdaemonpath
		ERROR=1
	fi

	;;
    stop)
	#for stop monitor
	monitorpid=`ps -ef |grep -v grep |grep asterccdaemon |awk '{print $2}'`
	if [ "x$monitorpid" != "x" ]; then
		if kill -9 $monitorpid ; then
			echo "$0 $ARG: asterrccdaemon stopped"
		else
			echo "$0 $ARG: asterrccdaemon could not be stopped"
			ERROR=12
		fi
	else	
		echo "$0 $ARG: asterrccdaemon not running"
	fi

	#for astercc
	if [ $asterccRUNNING -eq 0 ]; then
	    echo "$0 $ARG: $asterccSTATUS"
	else
	    if kill $asterccpid ; then
	        echo "$0 $ARG: astercc stopped"
	    else
	        echo "$0 $ARG: astercc could not be stopped"
	        ERROR=4
	    fi
	fi

	#for asterrc
	if [ $asterrcRUNNING -eq 0 ]; then
	    echo "$0 $ARG: $asterrcSTATUS"
	else
	    if kill $asterrcpid ; then
	        echo "$0 $ARG: asterrc stopped"
	    else
	        echo "$0 $ARG: asterrc could not be stopped"
	        ERROR=8
	    fi
	fi
	
	#for astercclock
	if [ $asterlcRUNNING -eq 0 ]; then
	    echo "$0 $ARG: $asterlcSTATUS"
	else
	    if kill $asterlcpid ; then
	        echo "$0 $ARG: astercclock stopped"
	    else
	        echo "$0 $ARG: astercclock could not be stopped"
	        ERROR=8
	    fi
	fi

	;;
    restart)
	monitorpid=`ps -ef |grep -v grep |grep asterccdaemon |awk '{print $2}'`
	if [ "x$monitorpid" == "x" ]; then
		echo "$0 $ARG: asterccdaemon not running, trying to start"
		if test $asterccdaemonpath; then
			/bin/sh $asterccdaemonpath &
			monitorpid=`ps -ef |grep -v grep |grep asterccdaemon |awk '{print $2}'`
			if [ "x$monitorpid" == "x" ]; then
				echo "$0 $ARG: asterccdaemon could not be started"
			else
				echo "$0 $ARG: asterccdaemon started"
			fi
		else
			echo No monitor script in $asterccdaemonpath
		fi
	else
		if kill -9 $monitorpid; then
			if test $asterccdaemonpath; then
				/bin/sh $asterccdaemonpath &
				monitorpid=`ps -ef |grep -v grep |grep asterccdaemon |awk '{print $2}'`
				if [ "x$monitorpid" == "x" ]; then
					echo "$0 $ARG: asterccdaemon could not be started"
				else
					echo "$0 $ARG: asterccdaemon restarted"
				fi
			else
				echo No monitor script in $asterccdaemonpath
			fi
		else
			echo "$0 $ARG: asterccdaemon could not be stop"
		fi
	fi

	#for astercc	
	if [ $asterccRUNNING -eq 0 ]; then
	    echo "$0 $ARG: astercc not running, trying to start"
	    $asterccpath -d
	    asterccpid=`ps -ef |grep -v grep |grep -E /asterc[.\ ]+-d |awk '{print $2}'`
	    if [ "x$asterccpid" != "x" ] ; then
		echo "$0 $ARG: astercc started"
	    else
		echo "$0 $ARG: astercc could not be started"
		ERROR=5
	    fi
	else
	    kill -9 $asterccpid
	    asterccpid=`ps -ef |grep -v grep |grep -E /asterc[.\ ]+-d |awk '{print $2}'`
	    if [ "x$asterccpid" != "x" ]; then
		echo "$0 $ARG: astercc could not stop"
	    else
		$asterccpath -d
		asterccpid=`ps -ef |grep -v grep |grep -E /asterc[.\ ]+-d |awk '{print $2}'`
		if [ "x$asterccpid" != "x" ] ; then
		    echo "$0 $ARG: astercc restarted"
		else
		    echo "$0 $ARG: astercc could not be started"
		    ERROR=6
		fi	   
	    fi
	fi
	
	#for asterrc
	if [ $asterrcRUNNING -eq 0 ]; then
	    echo "$0 $ARG: asterrc not running, trying to start"
	    $asterrcpath -d
	    asterrcpid=`ps -ef |grep -v grep |grep -E /asterr[.\ ]+-d |awk '{print $2}'`
	    if [ "x$asterrcpid" != "x" ] ; then
		echo "$0 $ARG: asterrc started"
	    else
		echo "$0 $ARG: asterrc could not be started"
		ERROR=9
	    fi
	else
	    kill -9 $asterrcpid
	    asterrcpid=`ps -ef |grep -v grep |grep -E /asterr[.\ ]+-d |awk '{print $2}'`
	    if [ "x$asterrcpid" != "x" ]; then
		echo "$0 $ARG: asterrc could not stop"
	    else
		$asterrcpath -d
		asterrcpid=`ps -ef |grep -v grep |grep -E /asterr[.\ ]+-d |awk '{print $2}'`
		if [ "x$asterrcpid" != "x" ] ; then
		    echo "$0 $ARG: asterrc restarted"
		else
		    echo "$0 $ARG: asterrc could not be started"
		    ERROR=10
		fi	   
	    fi
	fi

	#for astercclock
	if [ $asterlcRUNNING -eq 0 ]; then
	    echo "$0 $ARG: astercclock not running, trying to start"
	    $asterlcpath -d
	    asterlcpid=`ps -ef |grep -v grep |grep -E /asterccloc[.\ ]+-d |awk '{print $2}'`
	    if [ "x$asterlcpid" != "x" ] ; then
		echo "$0 $ARG: astercclock started"
	    else
		echo "$0 $ARG: astercclock could not be started"
		ERROR=9
	    fi
	else
	    kill -9 $asterlcpid
	    asterlcpid=`ps -ef |grep -v grep |grep -E /asterccloc[.\ ]+-d |awk '{print $2}'`
	    if [ "x$asterlcpid" != "x" ]; then
		echo "$0 $ARG: astercclock could not stop"
	    else
		$asterlcpath -d
		asterlcpid=`ps -ef |grep -v grep |grep -E /asterccloc[.\ ]+-d |awk '{print $2}'`
		if [ "x$asterlcpid" != "x" ] ; then
		    echo "$0 $ARG: astercclock restarted"
		else
		    echo "$0 $ARG: astercclock could not be started"
		    ERROR=10
		fi	   
	    fi
	fi
	;;
    *)
	echo "usage: $0 (start|stop|restart|help ;[default usage : start])"
	cat <<EOF

start      - start astercc and asterrc
stop       - stop astercc and asterrc
restart    - restart astercc and asterrc if running by sending a SIGHUP or start if 
             not running
help       - this screen

EOF
	ERROR=2
    ;;

    esac

done

exit $ERROR
