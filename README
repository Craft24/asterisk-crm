
====================================================================================

      asterCRM  (C) 2006,2007  Solo Fu  solo@magiclink.cn solo.fu@gmail.com

====================================================================================

asterCRM is a AJAX based 'Call Center' system. 

First, Asterisk Events are captured as the occur via a python script called ProxyMan.py and
logged to a MySQl database table(using script from Asterisk Event Monitor by earl@micpc.com).
Since Asterisk is sending these events as they occur (and not being polled for these events),
this leads to a more efficient Asterisk interface.

ProxyMan.py is a Python script which connects to the Asterisk Manager
Interface via a TCP/IP connection, listens for any events or messages coming from
the Manager Interface, time stamps each event and logs them to a MySQL database table.

ProxyMan can be run on any machine with a TCP/IP connection to the Asterisk server,
i.e. it does not have to run on the same machine as Asterisk.
More information on the function of ProxyMan can be found in its source comments.

WEB PHP scripts will analyze Asterisk Events in database, and finish call center jobs, 
such as pop-up, click to dial, call queue ... 

asterCRM scripts require a running WEB and MySQL server (in which stored asterisk events). All of these 
processes can run on the same server, however, multiple servers enhance performance.

1. Features

	1) pop-up when incoming calls 

	2) pop-up when outbound calls

	3) suggestion when enter business name or contact 

	4) account/extension manager

	5) click to dial

	6) click to transfer

	7) can be integrated with all asterisk based systems, such as Magiclink IP PBX, Trixbox ...
	
	8)	multi-language support (Chinese and English for now)

	9)	support external crm

	10)	extension status

2. asterCRM Installation: (assuming your WEB root is /var/www/html)

1) Download and unzip the source

	cd /var/www/html
	unzip astercrm-X.X-XXXX.zip

	Note: this creates the /var/www/html/astercrm directory which contains the
	PHP scripts and several sub-directories. 

	/var/www/html/astercrm			main directory and PHP scripts  
	/var/www/html/astercrm/proxyman 	proxyman related files
	/var/www/html/astercrm/includes 	files needed in php scripts
	/var/www/html/astercrm/images		image files used via the PHP scripts
	/var/www/html/astercrm/css		style files used via the PHP scripts
	/var/www/html/astercrm/js		auto-complete java scripts
	/var/www/html/astercrm/screenshot	some screen shot of asterCRM

	It is highly advised that the whole proxyman directory be moved to a more secure
	location like /opt and out of the WEB root directory (see step 4)

2) Create the MySQL database and table, asterCRM need mysql 4.1 or above

	mysqladmin create asterisk
	mysql </var/www/html/astercrm/astercrm.sql

	Note: the astercrm.sql file has the GRANT commands to update MySQL with
		the desired authority. The settings here must match the userid/password
		specified in the ProxyMan.py , delete_events.py script and the config.php script
		you can modify this script to meet your database

	Update the /var/www/html/astercrm/config.php script for the
	correct MySQL login userid/password 
	Make sure it matches what was specified in the astercrm.sql
	(user: asteriskuser password: asterisk by default)
	Asterisk Manager login username/password. 
	Make sure it matches what was specified in the manager.conf file.

	Update the /var/www/html/astercrm/proxyman/ProxyMan.py script for the correct MySQL
	login userid/password. Make sure it matches what was specified in the
	astercrm.sql file. ProxMan.py also needs updated with the Asterisk Manager
	password and secret (password), documented in the next step.
	The proxyman.py script has comments in the source noting the variable names
	and their functions.

3) Update /etc/asterisk/manager.conf to enable Manager connections
	Note: asterisk and astercrm could be on different server
 
	Add something like this to the manager.conf file:

	[general]
	enabled = yes
	port = 5038
	bindaddr = 0.0.0.0
	;displayconnects = yes

	;the following line could be changed by your selft
	[eventmanager]
	secret = asterisksecret
	read = system,call,log,verbose,command,agent,user
	write = system,call,log,verbose,command,agent,user

	Note: the manager.conf settings for user ([eventmanager] in this example)
		and secret need to match the /var/www/html/ProxyMan.py variable settings.
		The ProxyMan.py script has comments in the source noting the variable
		names and their functions.

4) Create the directories and move proxyman scripts:

	mkdir /opt/asterisk
	mkdir /opt/asterisk/scripts
	mkdir /opt/asterisk/scripts/events
	mv /var/www/html/events/proxyman/* /opt/asterisk/scripts/events
	chmod +x /opt/asterisk/scripts/events/*.py

5) Start Asterisk and  ProxyMan.py


	Start ProxyMan (default settings):
		/opt/asterisk/scripts/events/ProxyMan.py 

	OR Start ProxyMan (change settings):

		/opt/asterisk/scripts/events/ProxyMan.py debug 

	Note: when ProxyMan.py starts it will automatically become a daemon
		(so no need for for the & at the end of the command)
         
	Another python script is provided (asterstart.py) which can also be used to start
	Asterisk and ProxyMan.py and keep them running. See the README in the proxyman 
	directory.
 
	At some point it may be desirable to delete unwanted events from the database
	table. The Python script delete_events.py is designed for this.
	If run from a CRON task:
     
	*/2 * * * * /opt/asterisk/scripts/events/delete_events.py >/dev/null 2>&1

	It will delete all events older than the 2 minutes before current time .

6) Testing: browse to http://localhost/astercrm

	or http://YOUR-WEB-SERVER-ADDRESS/astercrm
		
	login with admin/admin

7) Manager interface
   
	click "Manager" on top right, then

	click "Extension Manager" to setup extension username and password

	click "System Monitor" to monitor system status

	click "Active Channels" to monitor active channels in asterisk

	click "Predictive Dialer" to enter predictive dialer section

	click "Back" to return to agent interface

3. How to use confirm button

	Customer field support auto-complete, which means it will list all items in 
	customer database matched with your entered. if you find the customer  already exsited, 
	select the item and then click "confirm" button, then all information for the customer 
	will be filled automaticly. (screenshot/1,2,3) Click "Cancel" button will clear all 
	information, you can enter another customer .

	Contact field is almost same with customer field, but it only list contacts belongs 
	to the customer above.

====================================================================================

2007-09-10	Version 0.44 Released (GPL)

====================================================================================

       The author can be reached at solo.fu@gmail.com for comments and suggestions.

====================================================================================

Manager Interface 

1. Extension Manager

Binding astercrm account and asterisk extension here, also manager could grant privileges
to astercrm account.

username:	username to log into astercrm
password:	password to log into astercrm

, only two levels for now. If it's "admin" in "User Type" field, that
means this account could enter manager interface section.

2. System Monitor
3. Active Channels
4. Predictive Dialer

Administrator could upload a phone list to table "diallist", so that astercrm know which number could be dialed.
there's are two field in table "diallist"
	phonenumber and assign
About assign, it would be a extension number in this field, means this number could be dialed by which extension, 
this phone number would appears in "agent dial mode"

there're two mode in dialer setion:
	a. agent dial mode

		if phone number is assigned to extension in table "dial list", when agent login, he could see a
button "get a new number" and XX records in dial list, then he can dial the button, a new table would pop up,
and in this table would have a phone number, agent could click the number to make a call. 
		once agent click the button and a new table pop up with a new phone number, the number would be
deleted from database, so agent could see that the number in dial list would decrease, until no records in 
database, and the button disappears.

	b. manager dial mode

	manager dial mode need a "admim" user, in predictive dialer module, if there're records in table "diallist"
(whatever assigned or not), he could see XXX records (means records number in database), 
a "Dial" button and a inputbox (means maximum concurrent active channel in asterisk, it would "pause" when 
asterisk active channels reach this number untill some channels hang up dialer would "continue" automaticly), during
this progress manger could stop/start the dialer or change max channels number. In config.php you could set where
the call would be sent to when answered, such as a IVR, a queue or whatever you need.
